"use client";

import { useTransition } from "react";
import { toast } from "sonner";

import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { createTestPostAction } from "@/app/actions/(auth)/user";
import { Loader2, Zap } from "lucide-react";

export function QuickTestForm() {
  const [isPending, startTransition] = useTransition();

  const handleQuickTest = () => {
    startTransition(async () => {
      try {
        const result = await createTestPostAction();

        if (result.error) {
          toast.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", {
            description: result.error,
          });
        } else if (result.success) {
          toast.success("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!", {
            description: result.success,
          });
        }
      } catch (error) {
        console.log("üöÄ ~ handleQuickTest ~ error:", error);
        toast.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î");
      }
    });
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>‡∏ó‡∏î‡∏™‡∏≠‡∏ö Server Action - ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢</CardTitle>
        <CardDescription>
          ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ (‡∏ï‡πâ‡∏≠‡∏á login)
        </CardDescription>
      </CardHeader>
      <CardContent>
        <Button
          onClick={handleQuickTest}
          disabled={isPending}
          className="w-full"
        >
          {isPending ? (
            <>
              <Loader2 className="mr-2 h-4 w-4 animate-spin" />
              ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö...
            </>
          ) : (
            <>
              <Zap className="mr-2 h-4 w-4" />
              ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏î‡∏™‡∏≠‡∏ö
            </>
          )}
        </Button>
      </CardContent>
    </Card>
  );
}
